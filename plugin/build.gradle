plugins {
    id 'java-gradle-plugin'
    id 'maven-publish'
}

group = 'org.gradlex'
version = '0.0.1'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.freemarker:freemarker:2.3.31'
    implementation 'org.eclipse.jgit:org.eclipse.jgit:5.7.0.202003110725-r'
    implementation 'commons-io:commons-io:1.4'
    implementation('com.fasterxml.jackson.core:jackson-core:2.13.3')
    implementation('com.fasterxml.jackson.core:jackson-annotations:2.13.3')
    implementation('com.fasterxml.jackson.core:jackson-databind:2.13.3')
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
}

gradlePlugin {
    plugins {
        greeting {
            id = 'org.gradlex.templates'
            implementationClass = 'org.gradlex.templates.GradleTemplatesPlugin'
        }
    }
}

sourceSets {
    functionalTest {
    }
}

tasks.named('test') {
    // Use JUnit Jupiter for unit tests.
    useJUnitPlatform()
}

configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

String localRepoName = 'Mylocal'

publishing {
    repositories {
        maven {
            name = localRepoName
            // change to point to your repo, e.g. http://my.org/repo
            url = layout.buildDirectory.dir('repo')
        }
    }
}

tasks.register('functionalTest', Test) {
    dependsOn "publishAllPublicationsTo${localRepoName}Repository"

    jvmArgs('-DtestRootDir=' + project.layout.buildDirectory.dir('functionalTest').get().asFile,
            "-DpluginRepo=" + layout.buildDirectory.dir('repo').get().asFile)
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    useJUnitPlatform()
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)

tasks.named('check') {
    // Run the functional tests as part of `check`
    dependsOn(tasks.functionalTest)
}
